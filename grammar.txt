program: declaration* ;

declaration: varDeclaration | funcDeclaration ;

funcDeclaration:
    'fn' IDENT '(' (IDENT ':' type)* ')' ('->' type)? block

block: '{' statement* '}'

statement:
      '{' statement* '}'
    | 'if' '(' expr ')' statement ('else' statement)?
    | 'while' '(' expr ')' statement
    | 'for' '(' varDeclaration? ';' expr ';' expr ')' statement
    | expr ';'
    | 'print' expr ';'
    | 'break' ';'
    | 'continue' ';'
    | varDeclaration
    | ';'

varDeclaration: ('let' | 'const') IDENT (':' type)? ('=' expr)? ';' ;

type: 'int' | 'char' | 'bool' | IDENT ;

expr:
      expr ',' expr
      | expr '=' expr
      | expr ('=='|'!=') expr
      | expr ('>='|'<='|'>'|'<') expr
      | expr  ('+'|'-') expr
      | expr  ('*'|'/') expr
      | ('+'|'-'|'!') expr
      | 'false' | 'true' | STRLIT
      | INTLIT | FLOATLIT | CHARLIT
      | IDENT
      | '(' expr ')'
      | expr '(' expr* ')'
      ;
